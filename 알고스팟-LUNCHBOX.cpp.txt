
#include<iostream>
#include<algorithm>
#include<math.h>
#include<vector>
#include<string>
#include<queue>
#include<map>
#include<stdio.h>
#include<utility>
#include<stack>

using namespace std;


int main()
{
	int testcase;
	cin >> testcase;
	while (testcase != 0)
	{
		int N;
		vector<int> m;
		vector<int> e;
		vector<pair<int, int>> v;

		cin >> N;

		for (int i = 0; i < N; i++)
		{
			int num;
			cin >> num;
			m.push_back(num);
		}

		for (int i = 0; i < N; i++)
		{
			int num;
			cin >> num;
			e.push_back(num);
		}

		for (int i = 0; i < N; i++)
		{
			v.push_back(make_pair(e[i], i));
		}

		sort(v.begin(), v.end());

		reverse(v.begin(), v.end());


		int ret = 0;
		int beginEat = 0;
		for (int i = 0; i < N; i++)
		{
			int num = v[i].second;
			beginEat += m[num];
			ret = max(ret, beginEat + e[num]);
		}
		cout << ret << endl;
		
		testcase--;
	}
	

	return 0;
}

