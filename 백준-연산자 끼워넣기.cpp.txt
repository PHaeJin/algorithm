#include<iostream>
#include <queue>
#include <cstdio>
#include<algorithm>
#include<utility>

using namespace std;
int N;
int arr[12];
int pplus;
int mminus;
int mmul;
int ddiv;
int oper[11];
int resultMax = -1000000001;
int resultMin = 1000000001;

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cin >> N;
	for (int i = 0; i < N; i++)
		cin >> arr[i];
	
	cin >> pplus >> mminus >> mmul >> ddiv;

	for (int i = 0; i < N - 1; i++)
	{
		if (pplus > 0)
		{
			oper[i] = 1;
			pplus--;
		}
		else if (mminus > 0)
		{
			oper[i] = 2;
			mminus--;
		}
		else if (mmul > 0)
		{
			oper[i] = 3;
			mmul--;
		}
		else if (ddiv > 0)
		{
			oper[i] = 4;
			ddiv--;
		}
	}
	
	int result = arr[0];

	for (int i = 0; i < N-1; i++)
	{
		if (oper[i]==1)
		{
			result += arr[i + 1];
		}
		else if (oper[i] == 2)
		{
			result -= arr[i + 1];
		}
		else if (oper[i] == 3)
		{
			result *= arr[i + 1];
		}
		else if (oper[i] == 4)
		{
			result /= arr[i + 1];
		}

	}
	if (result < resultMin)
		resultMin = result;
	if (result > resultMax)
		resultMax = result;

	while (next_permutation(oper, oper + N - 1))
	{
		result = arr[0];
		for (int i = 0; i < N - 1; i++)
		{
			if (oper[i] == 1)
			{
				result += arr[i + 1];
			}
			else if (oper[i] == 2)
			{
				result -= arr[i + 1];
			}
			else if (oper[i] == 3)
			{
				result *= arr[i + 1];
			}
			else if (oper[i] == 4)
			{
				result /= arr[i + 1];
			}

		}

		if (result < resultMin)
			resultMin = result;
		if (result > resultMax)
			resultMax = result;

	}
	cout << resultMax << endl;
	cout << resultMin << endl;
	return 0;
}


