#include <iostream>
#include<math.h>
#include<algorithm>
#include<map>
#include<utility>
#include<queue>
using namespace std;
bool check;
int N,K;
int arr[201];
int dp[201][201];
int memo[201][201];
int go(int i, int j)
{
	if (i == j)
		return 0;
	if (j - i == 1)
	{
		if (arr[j] != arr[i])
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if (memo[i][j] >= 0)
		return memo[i][j];

	dp[i][j] = 100000001;
	for (int s = i; s < j ; s++)
	{
		int num;
		if (arr[i] == arr[s + 1])
			num = 0;
		else
			num = 1;

		dp[i][j] = min(dp[i][j], go(i, s) + go(s + 1,j) + num);

	}
	memo[i][j] = dp[i][j];
	return dp[i][j];
}
int min_m(int num1, int num2)
{
	if (num1 > num2)
		return num2;
	else
		return num1;
}
int main()
{
	cin >> N >> K;

	for (int i = 0; i < N; i++)
	{
		cin >> arr[i];
	}
	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < N; j++)
		{
			memo[i][j] = -1;
		}
	}
	
	dp[0][N - 1] = 100000001;

	for (int s = 0; s < N - 1; s++)
	{
		int num;

		if (arr[0] == arr[s + 1])
			num = 0;
		else
			num = 1;
	
		dp[0][N - 1] = min(dp[0][N - 1], go(0, s) + go(s + 1, N - 1) + num);
	
	}
	cout << dp[0][N - 1] << endl;

	return 0;
}

