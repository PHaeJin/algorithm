#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

int main()
{
	int N;
	cin >> N;
	int **arr = new int*[N];
	vector<int> per(N-1);
	int last_result = 0;
	int result = 0;
	for (int i = 0; i < N; i++)
	{
		arr[i] = new int[N];
	}
	for (int i = 1; i < N; i++)
	{
		per[i-1] = i;
	}
	for (int j = 0; j < N; j++)
	{
		for (int i = 0; i < N; i++)
		{
			cin >> arr[j][i];
		}
	}
	bool first = true;
	bool check = true;
	do {
		check = true;
		
		int i;
	
		result += arr[0][per[0]];

		if (arr[0][per[0]] == 0)
			check = false;
		for (i = 1; i < N-1; i++)
		{
			result += arr[per[i-1]][per[i]];

			if (arr[per[i - 1]][per[i]] == 0)
				check = false;
		}
		result+=arr[per[i - 1]][0];

		if (arr[per[i - 1]][0] == 0)
			check = false;

		if (first&&check)
		{
			last_result = result;
			first = false;
		}

		if (check&&last_result > result)
			last_result = result;
		
		result = 0;

	} while (next_permutation(per.begin(), per.end()));

	cout << last_result << endl;

	for (int i = 0; i < N; i++)
	{
		delete[] arr[i];
	}
	delete[] arr;

	return 0;
}
