// ConsoleApplication3.cpp: 콘솔 응용 프로그램의 진입점을 정의합니다.
//
#include<iostream>
#include<string.h>
#include<queue>

using namespace std;
int arr[51][51];

int count_c = 0;
bool visit[51][51];
int N, M;

int rotate(int str)
{
	if (str == 0)
		return 3;
	else if (str == 1)
		return 0;
	else if (str == 2)
		return 1;
	else if (str == 3)
		return 2;
}

void dfs(int x, int y,int str)
{
	if (visit[x][y])
	{
		;
	}
	else
	{
		visit[x][y] = true;
		count_c++;
	}
	bool check = false;
	
	for (int i = 0; i < 4; i++)
	{
		if (check)
		{
			break;
		}
		str=rotate(str);

		if (str == 0 && x - 1 >= 0 && visit[x-1][y] == false&&arr[x-1][y]==0)
		{
			dfs(x - 1, y,str);
			check = true;
		}
		else if (str == 1 && y + 1<M && visit[x][y + 1] == false && arr[x][y+1] == 0)
		{
			dfs(x, y + 1, str);
			check = true;
		}
		else if (str == 2 && x + 1<N && visit[x + 1][y] == false && arr[x +1][y] == 0)
		{
			dfs(x + 1, y, str);
			check = true;
		}
		else if (str == 3 && y - 1 >= 0 && visit[x][y - 1] == false && arr[x][y-1] == 0)
		{
			dfs(x, y - 1, str);
			check = true;
		}
		
	}

	if (!check)
	{
		if (str == 0 && x + 1 < N &&arr[x + 1][y] == 0)
		{
			dfs(x + 1, y, str);
		}
		else if (str == 1 && y - 1>=0 && arr[x][y-1] == 0)
		{
			dfs(x, y - 1, str);
		}
		else if (str == 2 && x - 1>=0 && arr[x - 1][y] == 0)
		{
			dfs(x - 1, y, str);
		}
		else if (str == 3 && y + 1 <M &&arr[x][y+1] == 0)
		{
			dfs(x, y + 1, str);
		}
	}


}

int main()
{
	ios::sync_with_stdio(false);
	
	cin >> N >> M;

	int rx, ry,str;
	cin >> rx >> ry >> str;

	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < M; j++)
		{
			cin >> arr[i][j];
			visit[i][j] = false;
		}
	}

	dfs(rx, ry,str);

	cout << count_c << endl;
	return 0;
}

