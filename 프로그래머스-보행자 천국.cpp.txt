#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<map>

using namespace std;

int MOD = 20170805;
int H[501][501];
int V[501][501];


int solution(int m, int n, vector<vector<int>> city_map) {


	int answer = 0;
	
	H[0][0] = 1;
	V[0][0] = 1;

	for (int i = 0; i < m; i++)
	{
		for (int j = 0; j < n; j++)
		{
			if (i == 0 && j == 0)
				continue;

			H[i][j] = 0;
			V[i][j] = 0;
			if (city_map[i][j] == 0)
			{
				if (j - 1 >= 0)
				{
					H[i][j] = (H[i][j]+H[i][j - 1])%MOD;
					V[i][j] = (V[i][j] + H[i][j - 1]) % MOD;
				}
				if (i - 1 >= 0)
				{
					H[i][j] = (H[i][j] + V[i-1][j]) % MOD;
					V[i][j]=(V[i][j] + V[i - 1][j]) % MOD;
				}
			}
			else if (city_map[i][j] == 1)
			{
				;
			}
			else
			{
				if (j - 1 >= 0)
				{
					H[i][j] = (H[i][j] + H[i][j - 1]) % MOD;
				}
				if (i - 1 >= 0)
				{
					V[i][j] = (V[i][j] + V[i - 1][j]) % MOD;
				}
			}
		}
	}
	return (H[m - 1][n - 2] + V[m - 2][n - 1])%MOD;
}


int main()
{
	int m, n;
	vector<vector<int>> city_map;

	cin >> m >> n;

	for (int i = 0; i < m; i++)
	{
		vector<int> sub_map;
		for (int j = 0; j < n; j++)
		{
			int num;
			cin >> num;
			sub_map.push_back(num);
		}
		city_map.push_back(sub_map);
	}

	int sol;

	sol = solution(m, n, city_map);

	cout << sol << endl;

	
	return 0;

}

