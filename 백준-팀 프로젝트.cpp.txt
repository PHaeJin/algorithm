#include <iostream>
using namespace std;
int *stu;
int total_stu;
int result;
bool *visit;
bool *trace;
int *Testresult;
void dfs(int num)
{
	visit[num] = true;

	int next = stu[num];
	if (visit[next])
	{
		if (!trace[next])
		{
			for (int i = next; i != num; i = stu[i])
				result++;
	
			result++;
		}
	}
	else {
		dfs(next);
	}
	trace[num] = true;
}

int main()
{
	int Testcase;
	cin >> Testcase;
	Testresult = new int[Testcase];

	for (int s = 0; s < Testcase; s++)
	{
		result = 0;
		cin >> total_stu;
		stu = new int[total_stu + 1];
		visit = new bool[total_stu + 1];
		trace = new bool[total_stu + 1];
		for (int i = 1; i <= total_stu; i++)
		{
			cin >> stu[i];
		}
		for (int i = 1; i <= total_stu; i++)
		{
			visit[i] = false;
		}

		for (int j = 1; j <= total_stu; j++)
		{
			trace[j] = false;
		}
		for (int i = 1; i <= total_stu; i++)
		{
			if (!visit[i])
				dfs(i);
		}
		Testresult[s] = total_stu-result;

	}
	for (int i = 0; i < Testcase; i++)
	{
		cout << Testresult[i] << endl;
	}

	return 0;

}