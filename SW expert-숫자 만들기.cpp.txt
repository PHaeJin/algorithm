
#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
// +::1 , -::2 , *::3 , /::4
int On[13];
int Op[5];
vector<int> Op_C;
int Min_num = numeric_limits<int>::max();
int Max_num = numeric_limits<int>::min();

int N;

int main()
{
	int testcase,countT;
	countT = 1;
	cin >> testcase;
	while (testcase != 0)
	{
		Op_C.clear();
		Min_num = numeric_limits<int>::max();
		Max_num = numeric_limits<int>::min();

		cin >> N;
		for (int i = 1; i <= 4; i++)
			cin >> Op[i];
		for (int i = 0; i < N; i++)
			cin >> On[i];

		for (int i = 0; i < Op[1]; i++)
			Op_C.push_back(1);
		for (int i = 0; i < Op[2]; i++)
			Op_C.push_back(2);
		for (int i = 0; i < Op[3]; i++)
			Op_C.push_back(3);
		for (int i = 0; i < Op[4]; i++)
			Op_C.push_back(4);

		do
		{
			int ret = On[0];
			for (int i = 1; i < N; i++)
			{
				if (Op_C[i - 1] == 1)
				{
					ret += On[i];
				}
				else if (Op_C[i - 1] == 2)
				{

					ret -= On[i];
				}
				else if (Op_C[i - 1] == 3)
				{
					ret *= On[i];
				}
				else
				{
					ret /= On[i];
				}
			}
			if (ret > Max_num)
				Max_num = ret;
			if (ret < Min_num)
				Min_num = ret;

		} while (next_permutation(Op_C.begin(), Op_C.end()));

		cout <<"#"<<countT++<<" "<< Max_num - Min_num << endl;
		testcase--;
	}
	
	return 0;
}

