#include<iostream>
#include<math.h>
#include<algorithm>
#include<utility>
#include<queue>
#include<vector>
#include<stdio.h>
#include<string>
#include<cmath>
using namespace std;
int triangle[101][101];
int N;
int memo[101][101];
int max_w(int a, int b)
{
	if (a > b)
		return a;
	else
		return b;
}
int path(int x, int y)
{
	if (x == N - 1)
		return triangle[x][y];
	
	if (memo[x][y] >= 0)
		return memo[x][y];

	memo[x][y] = triangle[x][y] + max_w(path(x + 1, y), path(x + 1, y + 1));

	return memo[x][y];
}
int main()
{
	int testcase;
	cin >> testcase;
	while (testcase != 0)
	{
		cin >> N;

		for (int i = 0; i < N; i++)
		{
			for (int j = 0; j <= i; j++)
			{
				cin >> triangle[i][j];
				memo[i][j] = -1;
			}
		}

		int result = path(0, 0);

		cout << result << endl;

		testcase--;
	}
	
	return 0;
}

